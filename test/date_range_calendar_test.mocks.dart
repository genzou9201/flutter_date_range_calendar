// Mocks generated by Mockito 5.4.0 from annotations
// in date_range_calendar/test/date_range_calendar_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:date_range_calendar/src/data/calendar_setup_data.dart' as _i2;
import 'package:date_range_calendar/src/data/types.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDayCellStyle_0 extends _i1.SmartFake implements _i2.DayCellStyle {
  _FakeDayCellStyle_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDayOfTheWeekLabelsData_1 extends _i1.SmartFake
    implements _i2.DayOfTheWeekLabelsData {
  _FakeDayOfTheWeekLabelsData_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMonthLabelsData_2 extends _i1.SmartFake
    implements _i2.MonthLabelsData {
  _FakeMonthLabelsData_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CalendarSetupData].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalendarSetupData extends _i1.Mock implements _i2.CalendarSetupData {
  @override
  _i2.DayCellStyle get dayCellStyle => (super.noSuchMethod(
        Invocation.getter(#dayCellStyle),
        returnValue: _FakeDayCellStyle_0(
          this,
          Invocation.getter(#dayCellStyle),
        ),
        returnValueForMissingStub: _FakeDayCellStyle_0(
          this,
          Invocation.getter(#dayCellStyle),
        ),
      ) as _i2.DayCellStyle);
  @override
  _i2.DayOfTheWeekLabelsData get dayOfTheWeekLabelsData => (super.noSuchMethod(
        Invocation.getter(#dayOfTheWeekLabelsData),
        returnValue: _FakeDayOfTheWeekLabelsData_1(
          this,
          Invocation.getter(#dayOfTheWeekLabelsData),
        ),
        returnValueForMissingStub: _FakeDayOfTheWeekLabelsData_1(
          this,
          Invocation.getter(#dayOfTheWeekLabelsData),
        ),
      ) as _i2.DayOfTheWeekLabelsData);
  @override
  _i2.MonthLabelsData get monthLabelsData => (super.noSuchMethod(
        Invocation.getter(#monthLabelsData),
        returnValue: _FakeMonthLabelsData_2(
          this,
          Invocation.getter(#monthLabelsData),
        ),
        returnValueForMissingStub: _FakeMonthLabelsData_2(
          this,
          Invocation.getter(#monthLabelsData),
        ),
      ) as _i2.MonthLabelsData);
  @override
  _i3.MonthLayoutType get monthLayoutType => (super.noSuchMethod(
        Invocation.getter(#monthLayoutType),
        returnValue: _i3.MonthLayoutType.monthYear,
        returnValueForMissingStub: _i3.MonthLayoutType.monthYear,
      ) as _i3.MonthLayoutType);
  @override
  String get monthTitleYearUnit => (super.noSuchMethod(
        Invocation.getter(#monthTitleYearUnit),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
}
